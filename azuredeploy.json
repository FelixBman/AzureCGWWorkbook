{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of Log Analytic Workspace"
      }
    },
    "neworExisting":{
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicate if this should create a new or existing workspace"
      }
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/FelixBman/AzureCGWWorkbook/main/",
    "workbookTemplateUrl": "[uri(variables('templateBaseUrl'), 'CloudGenWANServiceWorkbook.json')]"
  },
  "resources": [
{
     "condition": "[equals(parameters('neworExisting'),'new')]",
      "apiVersion": "2015-11-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('workspaceName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "Name": "Free"
        }
      }
  },
 { 
          "apiVersion": "2020-08-01",
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "name": "[concat(parameters('workspaceName'), '/CGWFirewallActivityNEW')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
            "properties": {
            "category": "BarracudaCGWNEW",
            "displayName": "CGFWFirewallActivityNEW",
            "query": "Syslog| where ProcessName == \"box_Firewall_Activity\" | extend Type = extract(\"type=([\\\\w\\\\s]+)\",1,SyslogMessage), L4Protocol = extract(\"proto=([\\\\w\\\\s]+)\",1,SyslogMessage) , SourceInterface = extract(\"srcIF=([\\\\w\\\\s]+)\",1,SyslogMessage), SourceIP = extract(\"srcIP=([\\\\d\\\\.]+)\",1,SyslogMessage), SourcePort = extract(\"srcPort=([\\\\d\\\\s]+)\",1,SyslogMessage), SourceMAC = extract(\"srcMAC=([\\\\w\\\\d:]+)\",1,SyslogMessage), DestinationIP = extract(\"dstIP=([\\\\d\\\\.]+)\",1,SyslogMessage), DestinationPort = extract(\"dstPort=([\\\\w\\\\s]+)\",1,SyslogMessage), DestinationService = extract(\"dstService=([\\\\w\\\\s]+)\",1,SyslogMessage), DestinationInterface = extract(\"dstIF=([\\\\w\\\\s]+)\",1,SyslogMessage), FirewallRule = extract(\"rule=([\\\\w\\\\s\\\\-]+)\",1,SyslogMessage), Info = extract(\"info=([\\\\w\\\\s]+)\",1,SyslogMessage), SourceNAT = extract(\"srcNAT=([\\\\d\\\\.]+)\",1,SyslogMessage), DestinationNAT = extract(\"dstNAT=([\\\\d\\\\.]+)\",1,SyslogMessage), Duration = extract(\"duration=([\\\\d]+)\",1,SyslogMessage), Count = extract(\"count=([\\\\d]+)\",1,SyslogMessage), ReceivedBytes = extract(\"receivedBytes=([\\\\d]+)\",1,SyslogMessage), SentBytes = extract(\"sentBytes=([\\\\d]+)\",1,SyslogMessage), ReceivedPackets = extract(\"receivedPackets=([\\\\d]+)\",1,SyslogMessage), SentPackets = extract(\"sentPackets=([\\\\d]+)\",1,SyslogMessage), User = extract(\"user=([\\\\w\\\\s]+)\",1,SyslogMessage), L7Protocol = extract(\"protocol=([\\\\w\\\\s]+)\",1,SyslogMessage), Application = extract(\"application=([\\\\w\\\\s]+)\",1,SyslogMessage), Target = extract(\"target=([\\\\w\\\\s]+)\",1,SyslogMessage), Content = extract(\"content=([\\\\w\\\\s]+)\",1,SyslogMessage), URLCategory = extract(\"urlcat=([\\\\w\\\\s]+)\",1,SyslogMessage)",
            "FunctionAlias": "CGFWFirewallActivityNEW",
            "version": 2,
            "etag": "*"
                      }
        },
 { 
          "apiVersion": "2020-08-01",
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "name": "[concat(parameters('workspaceName'), '/CGWextractSDWANPerfNEW')]",
          "location": "[resourceGroup().location]",
                "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
          "properties": {
            "category": "BarracudaCGWNEW",
            "displayName": "CGWextractSDWANPerfNEW",
            "query": "CommonSecurityLog | where DeviceEventClassID == 400 | parse AdditionalExtensions with \"tunnel=\" tunnel \";host=\" host \";transpstate=\" transportstate \";tstamp=\" tstamp \";nbsamples=\" nbsamples \";bwupmin=\" bwupmin \";bwupavg=\" bwupavg \";bwupmax=\" bwupmax \";bwdownmin=\" bwdownmin \";bwdownavg=\" bwdownavg \";bwdownmax=\" bwdownmax \";latencymin=\" latencymin \";latencyavg=\" latencyavg \";latencymax=\" latencymax \";useupstdmin=\" useupstdmin \";useupstdavg=\" useupstdavg \";useupstdmax=\" useupstdmax \";usedownstdmin=\" usedownstdmin \";usedownstdavg=\" usedownstdavg \";usedownstdmax=\" usedownstdmax \";useupndmin=\"  useupndmin \";useupndavg=\" useupndavg \";useupndmax=\" useupndmax \";usedownndmin=\" usedownndmin \";usedownndavg=\" usedownndavg \";usedownndmax=\" usedownndmax | where toint(nbsamples) >= 300",
            "FunctionAlias": "CGWextractSDWANPerfNEW",
            "version": 1,
            "etag": "*"
                      }
        },
        {
          "apiVersion": "2020-08-01",
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "name": "[concat(parameters('workspaceName'), '/GetCGWAvailabiltyFromLoadNEW')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
          "properties": {
            "category": "BarracudaCGWNEW",
            "displayName": "GetFWAvailabiltyFromLoadNEW",
            "query": "Perf | where TimeGenerated > now() - 30d and TimeGenerated < now() and InstanceName == \"BNGF\" and ObjectName == \"Load\" | summarize heartbeat_per_hour=count() by bin_at(TimeGenerated, 1h, now() - 30d), Computer | extend available_per_hour=iff(heartbeat_per_hour>0, true, false) | summarize total_available_hours=countif(available_per_hour==true) by Computer | extend total_number_of_buckets=round((now()-(now() - 30d))/1h)+1 | extend availability_rate=total_available_hours*100/total_number_of_buckets",
            "FunctionAlias": "GetFWAvailabiltyFromLoadNEW",
            "version": 2,
            "etag": "*"
          }
        },
     { 
           "type": "Microsoft.Resources/deployments",
           "apiVersion": "2020-06-01",
            "name": "linkedTemplate",
            "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('workbookTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                  "workbookSourceId": {
                    "value" : "[Concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                  },
                  "workbookType": {
                    "value" : "workbook"
                  }
                }
            }
        }

  ],
  "outputs": {
    "workspaceOutput": {
      "value": "[reference(concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-11-01-preview')]",
      "type": "object"
    }
  }
}

